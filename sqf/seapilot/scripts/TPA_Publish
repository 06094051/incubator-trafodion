#!/usr/bin/perl
# @@@ START COPYRIGHT @@@
#
# (C) Copyright 2011-2014 Hewlett-Packard Development Company, L.P.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
# @@@ END COPYRIGHT @@@
#
#
# Script to publish an external event to the qpid event consumer..
#
# Usage: TPA_publish [--fifo <fifo>] <client_name> <routing_key> <timestamp> <publication_data>

use strict;
use Getopt::Long;

sub usage
{
   print "Usage: TPA_Publish [--fifo <fifo>] CLIENT_NAME ROUTING_KEY TIMESTAMP_UTC TIMESTAMP_LCT MSG";
}

my $fifo = "";

GetOptions('fifo=s' => \$fifo);

if ( @ARGV < 5 ) {
   &usage;
   exit 1;
}

my ($clientName, $routingKey, $timestampUtc, $timestampLct);
$clientName = shift @ARGV;
$routingKey = shift @ARGV;
$timestampUtc = shift @ARGV;
$timestampLct = shift @ARGV;

if ($fifo eq "") {
   $fifo = "$ENV{MY_SQROOT}/seapilot/amqp-tpa";
}

# Consolidate fifth parameter as the data can contain spaces
my $msg;
while ( @ARGV > 0) {
   $msg = "$msg @ARGV[0]";
   shift @ARGV;
}

$msg =~ s/\\t/\t/g; #replact '\t'(a two byte string) to "\t"(one byte)

# Message format is: <bodyLen>:<routing_key>:<timestamp_utc>:<timestamp_lct>:<client_name>:<msg>

# Assemble the message
my $my_message = "$routingKey:$timestampUtc:$timestampLct:$clientName:$msg\n";

# Determine actual length of message (each \t counts as 1)
my $numchars = length($my_message);

if ( ! -p $fifo ) {
   print "$fifo is not a valid named pipe\n";
   exit 2;
}

if ( ! -w $fifo ) {
   print "write permission denied by $fifo\n";
   exit 3;
}

use IO::File;
my $fh = IO::File->new($fifo, O_RDWR|O_ASYNC|O_NONBLOCK);
if (defined $fh) {
   print $fh "$numchars:$my_message";
   $fh->close;
}

0;
