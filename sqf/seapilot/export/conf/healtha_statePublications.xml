<?xml version="1.0" encoding="UTF-8"?>

<!-- @@@ START COPYRIGHT @@@                                                 -->
<!--                                                                         -->
<!-- (C) Copyright 2010-2014 Hewlett-Packard Development Company, L.P.       -->
<!--                                                                         -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");         -->
<!-- you may not use this file except in compliance with the License.        -->
<!-- You may obtain a copy of the License at                                 -->
<!--                                                                         -->
<!--      http://www.apache.org/licenses/LICENSE-2.0                         -->
<!--                                                                         -->
<!-- Unless required by applicable law or agreed to in writing, software     -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,       -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.-->
<!-- See the License for the specific language governing permissions and     -->
<!-- limitations under the License.                                          -->
<!--                                                                         -->
<!-- @@@ END COPYRIGHT @@@                                                   -->

<!DOCTYPE publicationConfiguration SYSTEM "./seaQuestRepository.dtd">
<publicationConfiguration>

  <!-- =================================================================== -->
  <!-- Description: SE check state                                        -->
  <!-- Table: MANAGEABILITY.INSTANCE_REPOSITORY.health_overview_table      -->
  <!-- Publication: gpb.health_se                                  -->
  <!-- =================================================================== -->
  <publicationMap>
    <amqpRoutingKey>health_state.se.instance.public.gpb.health_se</amqpRoutingKey>
    <repositoryTableName>manageability.instance_repository.health_overview_table</repositoryTableName>
    <columnMapping>
      <amqpColumnName>header.header.info_generation_time_ts_utc</amqpColumnName>
      <repositoryColumnName>gen_ts_utc</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_generation_time_ts_utc</amqpColumnName>
      <repositoryColumnName>calendar_date_utc</repositoryColumnName>
      <transformExpression>cast(? as date)</transformExpression>
    </columnMapping>
    <columnMapping>
      <repositoryColumnName>upsert_ts_utc</repositoryColumnName>
      <transformExpression>current_timestamp_utc</transformExpression>
      <!-- In seaquestM8 version 20109  both current_timestamp_utc and current_time_utc are implemented -->
    </columnMapping>

    <columnMapping>
      <amqpColumnName>header.header.info_generation_time_ts_lct</amqpColumnName>
      <repositoryColumnName>gen_ts_lct</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_generation_time_ts_lct</amqpColumnName>
      <repositoryColumnName>calendar_date_lct</repositoryColumnName>
      <transformExpression>cast(? as date)</transformExpression>
    </columnMapping>
    <columnMapping>
      <repositoryColumnName>upsert_ts_lct</repositoryColumnName>
      <transformExpression>current_timestamp</transformExpression>
    </columnMapping>

    <columnMapping>
      <amqpColumnName>header.header.info_instance_id</amqpColumnName>
      <repositoryColumnName>instance_id</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_tenant_id</amqpColumnName>
      <repositoryColumnName>tenant_id</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_component_id</amqpColumnName>
      <repositoryColumnName>component_id</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_process_id</amqpColumnName>
      <repositoryColumnName>process_id</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_thread_id</amqpColumnName>
      <repositoryColumnName>thread_id</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_node_id</amqpColumnName>
      <repositoryColumnName>node_id</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_pnid_id</amqpColumnName>
      <repositoryColumnName>pnid_id</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_ip_address_id</amqpColumnName>
      <repositoryColumnName>ip_address_id</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_sequence_num</amqpColumnName>
      <repositoryColumnName>sequence_number</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_process_name</amqpColumnName>
      <repositoryColumnName>process_name</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_host_id</amqpColumnName>
      <repositoryColumnName>host_id</repositoryColumnName>
    </columnMapping>

    <columnMapping>
      <amqpColumnName>header.publication_type</amqpColumnName>
      <repositoryColumnName>publication_type</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.check_interval_sec</amqpColumnName>
      <repositoryColumnName>check_interval_sec</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.error</amqpColumnName>
      <repositoryColumnName>error</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.error_text</amqpColumnName>
      <repositoryColumnName>error_text</repositoryColumnName>
    </columnMapping>

    <columnMapping>
      <amqpColumnName>data.logical_object_type</amqpColumnName>
      <repositoryColumnName>logical_object_type</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.logical_object_subtype</amqpColumnName>
      <repositoryColumnName>logical_object_subtype</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.logical_object_name</amqpColumnName>
      <repositoryColumnName>logical_object_name</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.logical_object_qual_1</amqpColumnName>
      <repositoryColumnName>logical_object_qual_1</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.logical_object_qual_2</amqpColumnName>
      <repositoryColumnName>logical_object_qual_2</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.logical_object_path</amqpColumnName>
      <repositoryColumnName>logical_object_path</repositoryColumnName>
      <transformExpression>coalesce(?,'NONE')</transformExpression>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.physical_object_type</amqpColumnName>
      <repositoryColumnName>physical_object_type</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.physical_object_subtype</amqpColumnName>
      <repositoryColumnName>physical_object_subtype</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.physical_object_name</amqpColumnName>
      <repositoryColumnName>physical_object_name</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.current_state</amqpColumnName>
      <repositoryColumnName>current_state</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.current_state_raw</amqpColumnName>
      <repositoryColumnName>current_state_raw</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.previous_state</amqpColumnName>
      <repositoryColumnName>previous_state</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.previous_state_raw</amqpColumnName>
      <repositoryColumnName>previous_state_raw</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.state_change_ts_lct</amqpColumnName>
      <repositoryColumnName>state_change_ts_lct</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.state_change_ts_utc</amqpColumnName>
      <repositoryColumnName>state_change_ts_utc</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.current_health</amqpColumnName>
      <repositoryColumnName>current_health</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.current_health_raw</amqpColumnName>
      <repositoryColumnName>current_health_raw</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.previous_health</amqpColumnName>
      <repositoryColumnName>previous_health</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.previous_health_raw</amqpColumnName>
      <repositoryColumnName>previous_health_raw</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.health_change_ts_lct</amqpColumnName>
      <repositoryColumnName>health_change_ts_lct</repositoryColumnName>
    </columnMapping>    
    <columnMapping>
      <repositoryColumnName>base_table_name</repositoryColumnName>
      <transformExpression>'HEALTH_SE_TABLE'</transformExpression>
    </columnMapping>
  </publicationMap>

  <!-- =================================================================== -->
  <!-- Description: cpmpression health state                               -->
  <!-- Table: MANAGEABILITY.INSTANCE_REPOSITORY.health_overview_table      -->
  <!-- Publication: compression.health_compression                         -->
  <!-- =================================================================== -->
  <publicationMap>
    <amqpRoutingKey>health_state.compression.instance.public.gpb.health_compression</amqpRoutingKey>
    <repositoryTableName>manageability.instance_repository.health_overview_table</repositoryTableName>
    <columnMapping>
      <amqpColumnName>header.header.info_generation_time_ts_utc</amqpColumnName>
      <repositoryColumnName>gen_ts_utc</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_generation_time_ts_utc</amqpColumnName>
      <repositoryColumnName>calendar_date_utc</repositoryColumnName>
      <transformExpression>cast(? as date)</transformExpression>
    </columnMapping>
    <columnMapping>
      <repositoryColumnName>upsert_ts_utc</repositoryColumnName>
      <transformExpression>current_timestamp_utc</transformExpression>
      <!-- In seaquestM8 version 20109  both current_timestamp_utc and current_time_utc are implemented -->
    </columnMapping>

    <columnMapping>
      <amqpColumnName>header.header.info_generation_time_ts_lct</amqpColumnName>
      <repositoryColumnName>gen_ts_lct</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_generation_time_ts_lct</amqpColumnName>
      <repositoryColumnName>calendar_date_lct</repositoryColumnName>
      <transformExpression>cast(? as date)</transformExpression>
    </columnMapping>
    <columnMapping>
      <repositoryColumnName>upsert_ts_lct</repositoryColumnName>
      <transformExpression>current_timestamp</transformExpression>
    </columnMapping>

    <columnMapping>
      <amqpColumnName>header.header.info_instance_id</amqpColumnName>
      <repositoryColumnName>instance_id</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_tenant_id</amqpColumnName>
      <repositoryColumnName>tenant_id</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_component_id</amqpColumnName>
      <repositoryColumnName>component_id</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_process_id</amqpColumnName>
      <repositoryColumnName>process_id</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_thread_id</amqpColumnName>
      <repositoryColumnName>thread_id</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_node_id</amqpColumnName>
      <repositoryColumnName>node_id</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_pnid_id</amqpColumnName>
      <repositoryColumnName>pnid_id</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_ip_address_id</amqpColumnName>
      <repositoryColumnName>ip_address_id</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_sequence_num</amqpColumnName>
      <repositoryColumnName>sequence_number</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_process_name</amqpColumnName>
      <repositoryColumnName>process_name</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.header.info_host_id</amqpColumnName>
      <repositoryColumnName>host_id</repositoryColumnName>
    </columnMapping>

    <columnMapping>
      <amqpColumnName>header.publication_type</amqpColumnName>
      <repositoryColumnName>publication_type</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.check_interval_sec</amqpColumnName>
      <repositoryColumnName>check_interval_sec</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.error</amqpColumnName>
      <repositoryColumnName>error</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>header.error_text</amqpColumnName>
      <repositoryColumnName>error_text</repositoryColumnName>
    </columnMapping>

    <columnMapping>
      <amqpColumnName>data.logical_object_type</amqpColumnName>
      <repositoryColumnName>logical_object_type</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.logical_object_subtype</amqpColumnName>
      <repositoryColumnName>logical_object_subtype</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.logical_object_name</amqpColumnName>
      <repositoryColumnName>logical_object_name</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.logical_object_qual_1</amqpColumnName>
      <repositoryColumnName>logical_object_qual_1</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.logical_object_qual_2</amqpColumnName>
      <repositoryColumnName>logical_object_qual_2</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.logical_object_path</amqpColumnName>
      <repositoryColumnName>logical_object_path</repositoryColumnName>
      <transformExpression>coalesce(?,'NONE')</transformExpression>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.physical_object_type</amqpColumnName>
      <repositoryColumnName>physical_object_type</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.physical_object_subtype</amqpColumnName>
      <repositoryColumnName>physical_object_subtype</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.physical_object_name</amqpColumnName>
      <repositoryColumnName>physical_object_name</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.current_state</amqpColumnName>
      <repositoryColumnName>current_state</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.current_state_raw</amqpColumnName>
      <repositoryColumnName>current_state_raw</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.previous_state</amqpColumnName>
      <repositoryColumnName>previous_state</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.previous_state_raw</amqpColumnName>
      <repositoryColumnName>previous_state_raw</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.state_change_ts_lct</amqpColumnName>
      <repositoryColumnName>state_change_ts_lct</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.state_change_ts_utc</amqpColumnName>
      <repositoryColumnName>state_change_ts_utc</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.current_health</amqpColumnName>
      <repositoryColumnName>current_health</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.current_health_raw</amqpColumnName>
      <repositoryColumnName>current_health_raw</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.previous_health</amqpColumnName>
      <repositoryColumnName>previous_health</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.previous_health_raw</amqpColumnName>
      <repositoryColumnName>previous_health_raw</repositoryColumnName>
    </columnMapping>
    <columnMapping>
      <amqpColumnName>data.health_change_ts_lct</amqpColumnName>
      <repositoryColumnName>health_change_ts_lct</repositoryColumnName>
    </columnMapping>    
    <columnMapping>
      <repositoryColumnName>base_table_name</repositoryColumnName>
      <transformExpression>'HEALTH_COMPRESSION_TABLE'</transformExpression>
    </columnMapping>
  </publicationMap>
</publicationConfiguration>
