import "common.event_header.proto";

package dtm;

message events
{
     required  common.event_header  header        = 1;
     optional int32                 error_code    = 2;  // error code if one exists
     optional int32                 rmid          = 3;  // the id of the TSE
     optional int32                 dtmid         = 4;  // the id of this DTM
     optional int32                 seq_num       = 5;  // the transaction sequence number
     optional int32                 msgid 	      = 6;  // the seabed assigned message id
     optional int64                 xa_error      = 7;  // the error code returned by an xa call
     optional int32                 pool_size     = 8;  // size of the pool
     optional int32                 pool_elems    = 9;  // number of elements in the pool
     optional int32                 msg_retries   = 10; // number of times a message was retried
     optional int32                 pool_high     = 11; // the upper limit of pool elements
     optional int32                 pool_low      = 12; // the lower limit of pool elements
     optional int32                 pool_max      = 13; // the max number of pool elements
     optional int32                 tx_state      = 14; // the state of a transaction
     optional int32                 data	      = 15; // general data - resuable slot
     optional int32                 data1         = 16; // general data - resuable slot
     optional int64                 data2         = 17; // general data - resuable slot
     optional string                string1       = 18; // general data - resuable slot
     optional int32                 node	      = 19; // seaquest node id
     optional int32                 msgid2        = 20; // seabed assigned message id (when more than 1 is needed)
     optional int32                 offset        = 21; // offset into broadcast message
     optional int32                 tm_event_msg  = 22; // message code of a dtm internal message
     optional uint32                data4         = 23; // general data - resuable slot
}
