import "common.info_header.proto";

package sql;

message tracking_compilers
{
    required common.info_header  header                    = 1;  // common header for all event messages

    required string              compiler_id               = 2;  // id of compiler being tracked
    optional int64               interval_start_lct_ts     = 4;  // interval start time in lct
    required int64               interval_path_len         = 5;  // the CPU usage of this interval
    required int64               longest_compile_path      = 6;  // longest CPU path length for single compile
                                                                 // within this interval
    required int64               compiler_age               = 7;  // age of compiler being tracked
    required int32               num_sessions              = 8;  // number of sessions during this interval
    required int64               stmt_heap_hwtr_mark       = 9;  // largest size of the statement heap so far
    required int64               context_heap_size         = 10; // number of bytes currently allocated for the
                                                                 // context heap of this process
    required int64               context_heap_hwtr_mark    = 11; // largest size of the context heap so far
    required int64               system_heap_size          = 12; // number of bytes currently allocated for the
                                                                 // system heap of this process
    required int64               system_heap_hwtr_mark     = 13; // largest size of the system heap so far
    required int64               metadata_cache_size       = 14; // number of bytes currently allocated for the
                                                                 // metadata cache
    required int64               metadata_cache_hwtr_mark  = 15; // largest size of the metadata cache so far
    required int64               metadata_cache_hits       = 16; // number of hits on the metadata cache
    required int64               metadata_cache_lookups    = 17; // number of misses on the metadata cache
    required int64               query_cache_size          = 18; // number of bytes currently allocated for the
                                                                 // query cache
    required int64               query_cache_hwtr_mark     = 19; // largest size of the query cache so far
    required int64               query_cache_hits          = 20; // number of hits on the query cache
    required int64               query_cache_lookups       = 21; // number of misses on the query cache
    required int64               histogram_cache_size      = 22; // number of bytes currently allocated for the
                                                                 // histogram cache
    required int64               histogram_cache_hwtr_mark = 23; // largest size of the histogram cache so far
    required int64               histogram_cache_hits      = 24; // number of hits on the histogram cache
    required int64               histogram_cache_lookups   = 25; // number of misses on the histogram cache
    required int64               num_queries_compiled      = 26; // number of compiled queries (DDL and DML)
    required int64               num_failed_queries        = 27; // number of failed compilations
    required int64               num_caught_exceptions     = 28; // number of queries compiled successfully
                                                                 // but with warnings (2053 and 2078)
    required int64               num_recompiles            = 29; // the number of recompiles
    required string              compiler_info             = 30; // extend any new counters
}

