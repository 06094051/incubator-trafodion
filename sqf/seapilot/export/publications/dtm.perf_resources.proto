import "common.info_header.proto";

package dtm;

message perf_resources {
    required common.info_header header = 1;  
    required int64 node = 2;                           // node id of this dtm
    required int32 tx_poolThresholdEventCounter = 3;   // incremented every 5th transaction object instantiation for which the pool exceeds the steady state high.  Ie, provides a warning that we're close to the maximum concurrent transactions.
    required int32 tx_poolSizeNow = 4;                 // current size of transaction pool
    required int32 tx_inUseListNow = 5;                // current transaction object count
    required int32 tx_freeListNow = 6;                 // current transaction object free list size.
    required int32 tx_steadyStateLow = 7;              // configured steady state low for transaction object pool.
    required int32 tx_steadyStateHigh = 8;             // configured steady state high for transaction object pool.
    required int32 tx_max = 9;                         // configured maximum size for transaction object pool.
    required int32 tx_totalAllocs_new = 10;            // total new transaction object allocations since TM started or last reset.
    required int32 tx_totalAllocs_free = 11;	       // total transaction objects allocations from free list.
    required int32 tx_totalDeallocs_free = 12;	       // total transaction object deallocations returned to free list.
    required int32 tx_totalDeallocs_delete = 13;	   // total transaction object deallocations deleting the object.
    required int32 thread_poolThresholdEventCounter = 17;	// incremented every 5th thread object instantiation for which the pool exceeds the steady state high.  Ie, provides a warning that we're close to the maximum txn/worker threads.
    required int32 thread_poolSizeNow = 18;	           // current thread pool size.
    required int32 thread_inUseListNow = 19;	       // current threads in use.
    required int32 thread_freeListNow = 20;	           // current threads in free list.
    required int32 thread_steadyStateLow = 21;	       // configured steady state low for thread pool.
    required int32 thread_steadyStateHigh = 22;	       // configured steady state high for thread pool.
    required int32 thread_max = 23;	                   // configured maximum threads in txn/worker thread pool.
    required int32 thread_totalAllocs_new = 24;	       // total new thread object allocations since TM was started or last reset.
    required int32 thread_totalAllocs_free = 25;	   // total thread object allocations from the free list.
    required int32 thread_totalDeallocs_free = 26;	   // total thread object deallocations returned to the free list.
    required int32 thread_totalDeallocs_delete = 27;   // total thread object deallocations which deleted the object (rather than returning it to the free list).
    required int64 total_tx_count = 28;                // incrememting count of transactions started in this dtm
    required int64 total_abort_count = 29;             // incrementing count of transaction aborts in this dtm
    required int64 total_commit_count = 30;            // incrementing count of transaction commits in this dtm
    required int64 current_tx_count = 31;              // total number of currently active transactions in this dtm
    optional string oldest_transid_internal = 32;                // oldest active transid in this dtm
    optional int64 oldest_transid_timestamp_utc = 33;      // timestamp of oldest active transid utc
    optional int64 oldest_transid_timestamp_lct = 34;      // timestamp of oldest active transid lct
    optional int64 oldest_transid = 35;         // first 64 bits of the transid
    optional int32 oldest_transid_owner_nid = 36;      // oldest transid owner node id
    optional int32 oldest_transid_owner_pid = 37;      // oldest transid owner process id
}
