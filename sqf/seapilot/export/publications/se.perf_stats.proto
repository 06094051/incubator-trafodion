import "common.info_header.proto";

package se;

message perf_stats {
    required common.info_header header = 1;
    required string volume_name = 2;
    required int32  primary = 3;
    required int64  requests = 4;
    required int64  service_time = 5;
    required int64  readdata_calls = 6;
    required int64  readdata_time = 7;
    required int64  readdata_bytes = 8;
    required int64  reply_calls = 9;
    required int64  reply_time = 10;
    required int64  reply_bytes = 11;
    required int64  disk_ios = 12;
    required int64  io_transit_waits = 13;
    required int64  request_io_wait_time = 14;
    required int64  request_messages = 15;
    required int64  request_message_wait_time = 16;
    required int64  request_semaphore_waits = 17;
    required int64  request_sem_wait_time = 18;
    required int64  filesem_wait_time = 19;
    required int64  volsem_waits = 20;
    required int64  volsem_wait_time = 21;
    required int64  cachesem_wait_time = 22;
    required int64  requests_queued = 23;
    required int64  request_queue_time = 24;
    required int64  requests_queued_preempt = 25;
    required int64  requests_queued_lock = 26;
    required int64  lock_waits = 27;
    required int64  lock_wait_time = 28;
    required int64  lock_wait_timeouts = 29;
    required int64  requests_deferred = 30;
    required int64  deferral_time = 31;
    required int64  open_requests = 32;
    required int64  close_requests = 33;
    required int64  ase_audit_requests = 34;
    required int64  ase_service_time = 35;
    required int64  dv_messages = 36;
    required int64  checkpoints = 37;
    required int64  dv_message_time = 38;
    required int64  checkpoint_time = 39;
    required int64  dv_message_bytes = 40;
    required int64  checkpoint_bytes = 41;
    required int64  sessions = 42;
    required int64  session_first_requests = 43;
    required int64  session_next_requests = 44;
    required int64  session_request_time = 45;
    required int64  session_service_time = 46;
    required int64  transactions = 47;
    required int64  transaction_time = 48;
    required int64  transaction_aborts = 49;
    required int64  inserts = 50;
    required int64  updates = 51;
    required int64  deletes = 52;
    required int64  fetches = 53;
    required int64  positions = 54;
    required int64  vsbb_inserts = 55;
    required int64  sidetree_inserts = 56;
    required int64  fastpath_fetches = 57;
    required int64  fastpath_inserts = 58;
    required int64  fastpath_deletes = 59;
    required int64  fastpath_updates = 60;
    required int64  fastpath_bulk_fetches = 61;
    required int64  cache_calls = 62;
    required int64  cache_service_time = 63;
    required int64  prefetches = 64;
    required int64  lock_calls = 65;
    required int64  lock_service_time = 66;
    required int64  ac_calls = 67;
    required int64  ac_service_time = 68;
    required int64  savepoints = 69;
    required int64  savepoint_rollbacks = 70;
    optional int64  data_parity_errors = 71;
    optional int64  recovered_parity_errors = 72;
    optional int64  cmap_parity_errors = 73;
    optional int64  hardware_compression_busy_errors = 74;
    optional int32  hardware_compression_using_software = 75;
    optional int64  hardware_comp_software = 76;
    optional int64  hardware_dcomp_software = 77;
    optional int64  compressions = 78;
    optional int64  comp_blocks = 79;
    optional int64  decompressions = 80;
    optional int64  decomp_blocks = 81;
    optional int64  compression_service_time = 82;
    optional int64  decompression_service_time = 83;
    optional int64  comp_sectors = 84;
    optional int64  decomp_sectors = 85;
    optional int64  primary_parity_errors = 86;
    optional int64  mirror_parity_errors = 87;
    optional int64  primary_ios = 88;
    optional int64  mirror_ios = 89;
    optional int64  primary_service_time = 90;
    optional int64  mirror_service_time = 91;
    optional int32  volume_capacity = 92;
    optional int32  volume_free_space = 93;
    optional int32  preempt_list_count = 94;
    optional int32  ready_list_count = 95;

}
