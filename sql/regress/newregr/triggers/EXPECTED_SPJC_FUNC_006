-- @@@ START COPYRIGHT @@@
--
-- (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.
--
--  Licensed under the Apache License, Version 2.0 (the "License");
--  you may not use this file except in compliance with the License.
--  You may obtain a copy of the License at
--
--      http://www.apache.org/licenses/LICENSE-2.0
--
--  Unless required by applicable law or agreed to in writing, software
--  distributed under the License is distributed on an "AS IS" BASIS,
--  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--  See the License for the specific language governing permissions and
--  limitations under the License.
--
-- @@@ END COPYRIGHT @@@
>>obey TEST_SPJC_FUNC_006(tests);
>>
>>------------------------------------------------------------------
>>-- TEST CASE 01: More than one cascading trigger
>>-- Result: Success
>>------------------------------------------------------------------
>>
>>CREATE TRIGGER TRIG01_SPJC_FUNC_006 AFTER DELETE ON
+>TAB01_SPJC_FUNC_006
+>REFERENCING OLD ROW AS O
+>FOR EACH ROW
+>	INSERT INTO TAB02_SPJC_FUNC_006 VALUES (O.A, O.B, O.C, O.D);

--- SQL operation complete.
>>
>>CREATE TRIGGER TRIG02_SPJC_FUNC_006 AFTER UPDATE ON
+>TAB01_SPJC_FUNC_006
+>REFERENCING OLD ROW AS O
+>FOR EACH ROW
+>	INSERT INTO TAB02_SPJC_FUNC_006 VALUES (O.A, O.B, O.C, O.D);

--- SQL operation complete.
>>
>>-- 	Cascading trigger on TAB02_SPJC_FUNC_006 to TAB03_SPJC_FUNC_006
>>CREATE TRIGGER TRIG03_SPJC_FUNC_006 AFTER INSERT ON
+>TAB02_SPJC_FUNC_006
+>REFERENCING NEW ROW AS N
+>FOR EACH ROW
+>	INSERT INTO TAB03_SPJC_FUNC_006 VALUES (N.A, N.B, N.C, N.D);

--- SQL operation complete.
>>------------------------------------------------------------------
>>
>>-- original table
>>select * from TAB01_SPJC_FUNC_006;

A            B            C            D          
-----------  -----------  -----------  -----------

          1            2            3            4
          8            6            4            2
          3            6            9           12

--- 3 row(s) selected.
>>
>>-- The tests
>>
>>BEGIN
+>--	triggers an insert of old values into TAB02_SPJC_FUNC_006
+>	DELETE FROM TAB01_SPJC_FUNC_006 where a = 8;
+>
+>--	triggers an insert of old values into TAB02_SPJC_FUNC_006
+>	UPDATE TAB01_SPJC_FUNC_006 set a = a + 1000 where a = 3;
+>END;

--- SQL operation complete.
>>
>>
>>-- Result: TAB01_SPJC_FUNC_006 has two rows
>>select * from TAB01_SPJC_FUNC_006;

A            B            C            D          
-----------  -----------  -----------  -----------

          1            2            3            4
       1003            6            9           12

--- 2 row(s) selected.
>>
>>-- Result: TAB02_SPJC_FUNC_006 has two rows
>>select * from TAB02_SPJC_FUNC_006;

A            B            C            D          
-----------  -----------  -----------  -----------

          8            6            4            2
          3            6            9           12

--- 2 row(s) selected.
>>
>>-- Result: TAB03_SPJC_FUNC_006 has two rows
>>select * from TAB03_SPJC_FUNC_006;

A            B            C            D          
-----------  -----------  -----------  -----------

          8            6            4            2
          3            6            9           12

--- 2 row(s) selected.
>>------------------------------------------------------------------
>>log;
