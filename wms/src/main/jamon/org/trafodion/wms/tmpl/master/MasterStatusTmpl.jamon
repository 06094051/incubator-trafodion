<%doc>
(C) Copyright 2013 Hewlett-Packard Development Company, L.P.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

Copyright 2011 The Apache Software Foundation

Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
</%doc>
<%args>
WmsMaster master;
String filter = "general";
String format = "html";
ArrayList<String> servers = null;
ArrayList<String> clients = null;
ArrayList<Stream> streams = null;
ArrayList<Rule> rules = null;
ArrayList<Request> workloads = null;
</%args>
<%import>
java.io.*;
java.util.*;
org.trafodion.wms.master.WmsMaster;
org.trafodion.wms.util.WmsConfiguration;
org.trafodion.wms.Constants;
org.trafodion.wms.util.Bytes;
org.trafodion.wms.thrift.generated.Request;
org.trafodion.wms.thrift.generated.Stream;
org.trafodion.wms.thrift.generated.Rule;
</%import>

<%java>

</%java>

<?xml version="1.0" encoding="UTF-8" ?>
<!-- Commenting out DOCTYPE so our blue outline shows on hadoop 0.20.205.0, etc.
     See tail of wms-2110 for explaination.
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"> 
-->
<html xmlns="http://www.w3.org/1999/xhtml">
<head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/>
<title>WmsMaster: <% master.getServerName() %></title>
<link rel="stylesheet" type="text/css" href="/static/wms.css" />
</head>
<body>
<h1 id="page_title">WmsMaster: <% master.getServerName() %>:<% master.getInfoPort() %></h1>
<p id="links_menu">
  <a href="/logs/">Local logs</a>
</p>

<hr id="head_rule" />
<h2>Attributes</h2>
<table id="attributes_table">
<col style="width: 10%;"/>
<col />
<col style="width: 20%;"/>
<tr><th>Attribute Name</th><th>Value</th><th>Description</th></tr>
<tr><td>Version</td><td><% org.trafodion.wms.util.VersionInfo.getVersion() %>, r<% org.trafodion.wms.util.VersionInfo.getRevision() %></td><td> The version and revision</td></tr>
<tr><td>Compiled</td><td><% org.trafodion.wms.util.VersionInfo.getDate() %>, <% org.trafodion.wms.util.VersionInfo.getUser() %></td><td>When this version was compiled and by whom</td></tr>
<tr><td>Start Time</td><td><% new Date(master.getStartTime()) %></td><td>When this server was started</td></tr>
<tr><td>Zookeeper Quorum</td><td><% master.getZKQuorumServersString() %></td><td>Addresses of all registered ZK servers</td></tr>
<tr><td>Zookeeper Znode</td><td><% master.getZKParentZnode() %></td><td>Parent ZK znode of this cluster</td></tr>
<tr><td>Metrics</td><td><% master.getMetrics() %></td><td>Server Metrics; heap sizes are in megabytes</td></tr>
</table>

<%if (servers != null) %>
<& WmsServers &>
</%if>

<%if (clients != null) %>
<& WmsClients &>
</%if>

<%if (streams != null) %>
<& WmsStreams &>
</%if>

<%if (rules != null) %>
<& WmsRules &>
</%if>

<%if (workloads != null) %>
<& WmsWorkloads &>
</%if>

</body>
</html>

<%def WmsServers>
<h2>Servers</h2>
<%if (servers != null && servers.size() > 0)%>
<%java>
     int totalServers = 0;
     String hostName;
     String instance;
     String thriftPort;
     String infoPort;
     long startTime;
</%java>
<table>
<tr>
<th rowspan="<% servers.size() + 1%>"></th>
<th>Host:Instance</th>
<th>Start Time</th>
</tr>
<%java>
//     Collections.sort(servers, new Comparator<String>(){
//          public int compare(String s1, String s2){
//              if(s1.getInstanceIntValue() == s2.getInstanceIntValue())
//                  return 0;
//              return s1.getInstanceIntValue() < s2.getInstanceIntValue() ? -1 : 1;
//          }
//     });
     
     for (String aRunningServer: servers) {
        Scanner scn = new Scanner(aRunningServer);
        scn.useDelimiter(":");
        hostName = scn.next();
        instance = scn.next();
        thriftPort = scn.next(); 
        infoPort = scn.next(); 
        startTime = Long.parseLong(scn.next());
        scn.close();
        String url = "http://" + hostName + ":" + infoPort + "/";
</%java>
<tr>
<td><a href="<% url %>"><% hostName + ":" + instance %></a>
</td>
<td><% new Date(startTime) %></td>
</tr>
<%java>
    }
</%java>
<tr><th>Total: </th><td>servers: <% servers.size() %></td></tr>
</table>
<%else>
No servers found.
</%if>
</%def>

<%def WmsClients>
<h2>Clients</h2>
<%if (clients != null && clients.size() > 0)%>
<%java>
     int totalClients = 0;
     String ipAddress;
     long registerTimestamp;
</%java>
<table>
<tr>
<th rowspan="<% clients.size() + 1%>"></th>
<th>Ip Address</th>
<th>Registered</th>
</tr>
<%java>
     for (String aClient: clients) {
        Scanner scn = new Scanner(aClient);
        scn.useDelimiter(":");
        ipAddress = scn.next();
        registerTimestamp = Long.parseLong(scn.next());
        scn.close();
</%java>
<tr>
<td><% ipAddress %></td>
<td><% new Date(registerTimestamp) %></td>
</tr>
<%java>
    }
</%java>
<tr><th>Total: </th><td>clients: <% clients.size() %></td></tr>
</table>
<%else>
No clients found.
</%if>
</%def>

<%def WmsStreams>
<h2>CEP Streams</h2>
<%if (streams != null && streams.size() > 0)%>
<%java>
     int totalStreams = 0;
</%java>

<table>
<tr>
<th rowspan="<% streams.size() + 1%>"></th>
<th>Id</th>
<th>Text</th>
<th>Comment</th>
<th>Last Updated</th>
</tr>
<%java>
     for (Stream aStream: streams) {
     String streamValue = aStream.getValue();
     streamValue = streamValue.replaceAll(",",", ");
</%java>
<tr>
<td><% aStream.getName() %></td>
<td><% streamValue %></td>
<td><% aStream.getComment() %></td>
<td><% new Date(aStream.getTimestamp()) %></td>
</tr>
<%java>
     }
</%java>
<tr><th>Total: </th><td>streams: <% streams.size() %></td></tr>
</table>
<%else>
No streams found.
</%if>
</%def>

<%def WmsRules>
<h2>CEP Rules</h2>
<%if (rules != null && rules.size() > 0)%>
<%java>
     int totalRules = 0;
</%java>

<table>
<tr>
<th rowspan="<% rules.size() + 1%>"></th>
<th>Id</th>
<th>Text</th>
<th>Comment</th>
<th>Last Updated</th>
</tr>
<%java>
     for (Rule aRule: rules) {
</%java>
<tr>
<td><% aRule.getName() %></td>
<td><% aRule.getValue() %></td>
<td><% aRule.getComment() %></td>
<td><% new Date(aRule.getTimestamp()) %></td>
</tr>
<%java>
     }
</%java>
<tr><th>Total: </th><td>rules: <% rules.size() %></td></tr>
</table>
<%else>
No rules found.
</%if>
</%def>

<%def WmsWorkloads>
<h2>Workloads</h2>
<%if (workloads != null && workloads.size() > 0)%>
<%java>
     int totalWorkloads = 0;
</%java>

<table>
<tr>
<th rowspan="<% workloads.size() + 1%>"></th>
<th>Workload Id</th>
<th>State</th>
<th>Sub State</th>
<th>Type</th>
<th>Workload Text</th>
<th>Workload Details</th>
</tr>
<%java>
     StringBuilder sb = null;
     for (Request aWorkload: workloads) {
</%java>
<tr>
<td><% aWorkload.getData().getKeyValues().get(Constants.WORKLOAD_ID).getStringValue() %></td>
<td><% aWorkload.getData().getKeyValues().get(Constants.STATE).getStringValue() %></td>
<td><% aWorkload.getData().getKeyValues().get(Constants.SUBSTATE).getStringValue() %></td>
<td><% aWorkload.getData().getKeyValues().get(Constants.TYPE).getStringValue() %></td>
<%java>
     String workloadText = null; 
     if(aWorkload.getData().getKeyValues().get("request") != null)
        workloadText = aWorkload.getData().getKeyValues().get("request").getStringValue();
     else if (aWorkload.getData().getKeyValues().get("queryText") != null)
        workloadText = aWorkload.getData().getKeyValues().get("queryText").getStringValue();     
</%java>
<td><% workloadText %></td>
<%java>
         sb = new StringBuilder();
         if(aWorkload.getData().getKeyValues() != null){
             boolean isFirst = true;
             for (String key: aWorkload.getData().getKeyValues().keySet()) {
                if(aWorkload.getData().getKeyValues().get(key).isSetByteValue()) {
                     if(! isFirst) sb.append(", ");
                     sb.append(key + "=" + aWorkload.getData().getKeyValues().get(key).getByteValue());
                } else if(aWorkload.getData().getKeyValues().get(key).isSetShortValue()) {
                     if(! isFirst) sb.append(", ");
                     sb.append(key + "=" + aWorkload.getData().getKeyValues().get(key).getShortValue());
                } else if(aWorkload.getData().getKeyValues().get(key).isSetIntValue()) {
                     if(! isFirst) sb.append(", ");
                     sb.append(key + "=" + aWorkload.getData().getKeyValues().get(key).getIntValue());
                } else if(aWorkload.getData().getKeyValues().get(key).isSetLongValue()) {
                     if(! isFirst) sb.append(", ");
                     if(key.equalsIgnoreCase("beginTimestamp"))
                        sb.append(key + "=" + new Date(aWorkload.getData().getKeyValues().get(Constants.BEGIN_TIMESTAMP).getLongValue()));
                     else if(key.equalsIgnoreCase("endTimestamp"))
                        sb.append(key + "=" + new Date(aWorkload.getData().getKeyValues().get(Constants.END_TIMESTAMP).getLongValue()));
                     else if(key.equalsIgnoreCase("lastUpdated")) 
                        sb.append(key + "=" + new Date(aWorkload.getHeader().getServerLastUpdated()));
                     else
                        sb.append(key + "=" + aWorkload.getData().getKeyValues().get(key).getLongValue());
                } else if(aWorkload.getData().getKeyValues().get(key).isSetFloatValue()) {
                     if(! isFirst) sb.append(", ");
                     sb.append(key + "=" + aWorkload.getData().getKeyValues().get(key).getFloatValue());
                } else if(aWorkload.getData().getKeyValues().get(key).isSetStringValue()) {
                     if(key.equalsIgnoreCase("queryText") || key.equalsIgnoreCase("request")
                        || key.equalsIgnoreCase("state") || key.equalsIgnoreCase("subState")
                        || key.equalsIgnoreCase("type") || key.equalsIgnoreCase("workloadId"))
                        continue;
                     else {
                        if(! isFirst) sb.append(", ");
                        sb.append(key + "=" + aWorkload.getData().getKeyValues().get(key).getStringValue());
                     }
                }

                isFirst = false;
             } 
         }
</%java>
<td><% sb.toString() %></td>
</tr>
<%java>
     }
</%java>
<tr><th>Total: </th><td>workloads: <% workloads.size() %></td></tr>
</table>
<%else>
No workloads found.
</%if>
</%def>