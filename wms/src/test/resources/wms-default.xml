<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<configuration>
  <property>
    <name>hwms.rootdir</name>
    <value>file:///tmp/wms-${user.name}/wms</value>
    <description>The directory shared by region servers and into
    which Wms persists.  The URL should be 'fully-qualified'
    to include the filesystem scheme.  For example, to specify the
    HDFS directory '/hwms' where the HDFS instance's namenode is
    running at namenode.example.org on port 9000, set this value to:
    hdfs://namenode.example.org:9000/hwms.  By default HBase writes
    into /tmp.  Change this configuration else all data will be lost
    on machine restart.
    </description>
  </property>
  <property>
    <name>hwms.master.port</name>
    <value>60000</value>
    <description>The port the HBase Master should bind to.</description>
  </property>
  <property>
    <name>hwms.cluster.distributed</name>
    <value>false</value>
    <description>The mode the cluster will be in. Possible values are
      false for standalone mode and true for distributed mode.  If
      false, startup will run all WMS and ZooKeeper daemons together
      in the one JVM.
    </description>
  </property>
  <property>
    <name>hwms.tmp.dir</name>
    <value>${java.io.tmpdir}/hwms-${user.name}</value>
    <description>Temporary directory on the local filesystem.
    Change this setting to point to a location more permanent
    than '/tmp' (The '/tmp' directory is often cleared on
    machine restart).
    </description>
  </property>
  <property>
    <name>hwms.local.dir</name>
    <value>${hwms.tmp.dir}/local/</value>
    <description>Directory on the local filesystem to be used 
    as a local storage.
    </description>
  </property>
  <property>
    <name>hwms.master.info.port</name>
    <value>60010</value>
    <description>The port for the HBase Master web UI.
    Set to -1 if you do not want a UI instance run.
    </description>
  </property>
  <property>
    <name>hwms.master.info.bindAddress</name>
    <value>0.0.0.0</value>
    <description>The bind address for the HBase Master web UI
    </description>
  </property>
  <property>
    <name>hwms.client.pause</name>
    <value>1000</value>
    <description>General client pause value.  Used mostly as value to wait
    before running a retry of a failed get, region lookup, etc.</description>
  </property>
  <property>
    <name>hwms.zookeeper.dns.interface</name>
    <value>default</value>
    <description>The name of the Network Interface from which a ZooKeeper server
      should report its IP address.
    </description>
  </property>
  <property>
    <name>hwms.zookeeper.dns.nameserver</name>
    <value>default</value>
    <description>The host name or IP address of the name server (DNS)
      which a ZooKeeper server should use to determine the host name used by the
      master for communication and display purposes.
    </description>
  </property>
  <property>
    <name>hwms.master.dns.interface</name>
    <value>default</value>
    <description>The name of the Network Interface from which a master
      should report its IP address.
    </description>
  </property>
  <property>
    <name>hwms.master.dns.nameserver</name>
    <value>default</value>
    <description>The host name or IP address of the name server (DNS)
      which a master should use to determine the host name used
      for communication and display purposes.
    </description>
  </property>
  <property>
    <name>hwms.server.thread.wakefrequency</name>
    <value>10000</value>
    <description>Time to sleep in between searches for work (in milliseconds).
    Used as sleep interval by service threads such as log roller.
    </description>
  </property>
  <property>
    <name>hwms.server.versionfile.writeattempts</name>
    <value>3</value>
    <description>
    How many time to retry attempting to write a version file
    before just aborting. Each attempt is seperated by the
    hwms.server.thread.wakefrequency milliseconds.
    </description>
  </property>
  <property>
    <name>hwms.hash.type</name>
    <value>murmur</value>
    <description>The hashing algorithm for use in HashFunction. Two values are
    supported now: murmur (MurmurHash) and jenkins (JenkinsHash).
    Used by bloom filters.
    </description>
  </property>
  <property>
    <name>zookeeper.session.timeout</name>
    <value>180000</value>
    <description>ZooKeeper session timeout.
      HWMS passes this to the zk quorum as suggested maximum time for a
      session (This setting becomes zookeeper's 'maxSessionTimeout').  See
      http://hadoop.apache.org/zookeeper/docs/current/zookeeperProgrammers.html#ch_zkSessions
      "The client sends a requested timeout, the server responds with the
      timeout that it can give the client. " In milliseconds.
    </description>
  </property>
  <property>
    <name>zookeeper.znode.parent</name>
    <value>/hwms</value>
    <description>Root Znode for HWMS in ZooKeeper. All of HWMS's ZooKeeper
      files that are configured with a relative path will go under this node.
      By default, all of HWMS's ZooKeeper file path are configured with a
      relative path, so they will all go under this directory unless changed.
    </description>
  </property>
  <property>
    <name>zookeeper.znode.rootserver</name>
    <value>root-region-server</value>
    <description>Path to ZNode holding root region location. This is written by
      the master and read by clients and region servers. If a relative path is
      given, the parent folder will be ${zookeeper.znode.parent}. By default,
      this means the root location is stored at /wms/root-region-server.
    </description>
  </property>

  <property>
    <name>zookeeper.znode.acl.parent</name>
    <value>acl</value>
    <description>Root ZNode for access control lists.</description>
  </property>
  
  <!--
  The following three properties are used together to create the list of
  host:peer_port:leader_port quorum servers for ZooKeeper.
  -->
  <property>
    <name>hwms.zookeeper.quorum</name>
    <value>localhost</value>
    <description>Comma separated list of servers in the ZooKeeper Quorum.
    For example, "host1.mydomain.com,host2.mydomain.com,host3.mydomain.com".
    By default this is set to localhost for local and pseudo-distributed modes
    of operation. For a fully-distributed setup, this should be set to a full
    list of ZooKeeper quorum servers. If HWMS_MANAGES_ZK is set in wms-env.sh
    this is the list of servers which we will start/stop ZooKeeper on.
    </description>
  </property>
  <property>
    <name>hwms.zookeeper.peerport</name>
    <value>2888</value>
    <description>Port used by ZooKeeper peers to talk to each other.
    See http://hadoop.apache.org/zookeeper/docs/r3.1.1/zookeeperStarted.html#sc_RunningReplicatedZooKeeper
    for more information.
    </description>
  </property>
  <property>
    <name>hwms.zookeeper.leaderport</name>
    <value>3888</value>
    <description>Port used by ZooKeeper for leader election.
    See http://hadoop.apache.org/zookeeper/docs/r3.1.1/zookeeperStarted.html#sc_RunningReplicatedZooKeeper
    for more information.
    </description>
  </property>
  <property>
    <name>hwms.zookeeper.useMulti</name>
    <value>false</value>
    <description>Instructs HBase to make use of ZooKeeper's multi-update functionality.
    This allows certain ZooKeeper operations to complete more quickly and prevents some issues
    with rare ZooKeeper failure scenarios (see the release note of HBASE-6710 for an example).
    IMPORTANT: only set this to true if all ZooKeeper servers in the cluster are on version 3.4+
    and will not be downgraded.  ZooKeeper versions before 3.4 do not support multi-update and will
    not fail gracefully if multi-update is invoked (see ZOOKEEPER-1495).
    </description>
  </property>
  <!-- End of properties used to generate ZooKeeper host:port quorum list. -->

  <!--
  Beginning of properties that are directly mapped from ZooKeeper's zoo.cfg.
  All properties with an "hwms.zookeeper.property." prefix are converted for
  ZooKeeper's configuration. Hence, if you want to add an option from zoo.cfg,
  e.g.  "initLimit=10" you would append the following to your configuration:
    <property>
      <name>hwms.zookeeper.property.initLimit</name>
      <value>10</value>
    </property>
  -->
  <property>
    <name>hwms.zookeeper.property.initLimit</name>
    <value>10</value>
    <description>Property from ZooKeeper's config zoo.cfg.
    The number of ticks that the initial synchronization phase can take.
    </description>
  </property>
  <property>
    <name>hwms.zookeeper.property.syncLimit</name>
    <value>5</value>
    <description>Property from ZooKeeper's config zoo.cfg.
    The number of ticks that can pass between sending a request and getting an
    acknowledgment.
    </description>
  </property>
  <property>
    <name>hwms.zookeeper.property.dataDir</name>
    <value>${hwms.tmp.dir}/zookeeper</value>
    <description>Property from ZooKeeper's config zoo.cfg.
    The directory where the snapshot is stored.
    </description>
  </property>
  <property>
    <name>hwms.zookeeper.property.clientPort</name>
    <value>2181</value>
    <description>Property from ZooKeeper's config zoo.cfg.
    The port at which the clients will connect.
    </description>
  </property>
  <property>
    <name>hwms.zookeeper.property.maxClientCnxns</name>
    <value>300</value>
    <description>Property from ZooKeeper's config zoo.cfg.
    Limit on number of concurrent connections (at the socket level) that a
    single client, identified by IP address, may make to a single member of
    the ZooKeeper ensemble. Set high to avoid zk connection issues running
    standalone and pseudo-distributed.
    </description>
  </property>
  <!-- End of properties that are directly mapped from ZooKeeper's zoo.cfg -->
  <property>
    <name>hwms.rest.port</name>
    <value>8080</value>
    <description>The port for the HWMS REST server.</description>
  </property>
  <property>
    <name>hwms.rest.readonly</name>
    <value>false</value>
    <description>
    Defines the mode the REST server will be started in. Possible values are:
    false: All HTTP methods are permitted - GET/PUT/POST/DELETE.
    true: Only the GET method is permitted.
    </description>
  </property>
  <property>
    <name>hwms.rest.threads.max</name>
    <value>100</value>
    <description>
        The maximum number of threads of the REST server thread pool.
        Threads in the pool are reused to process REST requests. This
        controls the maximum number of requests processed concurrently.
        It may help to control the memory used by the REST server to
        avoid OOM issues. If the thread pool is full, incoming requests
        will be queued up and wait for some free threads. The default
        is 100.
    </description>
  </property>
  <property>
    <name>hwms.rest.threads.min</name>
    <value>2</value>
    <description>
        The minimum number of threads of the REST server thread pool.
        The thread pool always has at least these number of threads so
        the REST server is ready to serve incoming requests. The default
        is 2.
    </description>
  </property>
  <property>
    <name>hwms.rest.refresh.seconds</name>
    <value>5</value>
    <description>
        Time in seconds between refresh of the REST server page. Set to 0
        to disable automatic refresh. The default is 5.
    </description>
  </property>
  <property>
    <name>hwms.job.timeout.min</name>
    <value>0</value>
    <description>
        The time in minutes that a workload duration is active
        before timing out. The default is 0 or no timeout.
    </description>
  </property>
  <property>
    <name>vertica.workloads.enabled</name>
    <value>false</value>
    <description>
        If set to true start Vertica client and monitor it's workloads.
    </description>
  </property>
  <property>
    <name>vertica.query.timeout.min</name>
    <value>0</value>
    <description>
        The time in minutes that a workload duration is active
        before timing out for vertica queries. The default is 0 or no timeout.
    </description>
  </property>
  <property>
    <name>vertica.jdbc.url</name>
    <value>jdbc:vertica://localhost:5433/VMart</value>
    <description>
        The Vertica JDBC driver url.
    </description>
  </property>
  <property>
    <name>vertica.jdbc.url.user</name>
    <value>vertica</value>
    <description>
        The Vertica JDBC driver user.
    </description>
  </property>
    <property>
    <name>vertica.jdbc.url.password</name>
    <value>vertica</value>
    <description>
        The Vertica JDBC driver password.
    </description>
  </property>
  <property>
    <name>hadoop.workloads.enabled</name>
    <value>false</value>
    <description>
        If set to true start Hadoop client and monitor it's workloads.
    </description>
  </property>
  <property>
    <name>hadoop.mapred.job.tracker</name>
    <value>localhost</value>
    <description>
        The Hadoop JobTracker hostname. The default is localhost
    </description>
  </property>
  <property>
    <name>hadoop.mapred.job.tracker.port</name>
    <value></value>
    <description>
        The Hadoop JobTracker port. 
    </description>
  </property>
</configuration>
